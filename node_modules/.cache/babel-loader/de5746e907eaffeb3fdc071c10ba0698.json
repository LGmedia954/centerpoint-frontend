{"ast":null,"code":"import { resetOrganizationForm } from './organizationForm';\nexport const setMyOrganizations = organizations => {\n  return {\n    type: \"SET_MY_ORGANIZATIONS\",\n    organizations\n  };\n};\nexport const clearOrganizations = () => {\n  return {\n    type: \"CLEAR_ORGANIZATIONS\"\n  };\n};\nexport const addOrganization = organization => {\n  return {\n    type: \"ADD_ORGANIZATION\",\n    organization\n  };\n};\nexport const deleteOrganizationSuccess = organizationId => {\n  return {\n    type: \"DELETE_ORGANIZATION\",\n    organizationId\n  };\n};\nexport const updateOrganizationSuccess = organization => {\n  return {\n    type: \"UPDATE_ORGANIZATION\",\n    organization\n  };\n};\nexport const getMyOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setMyOrganizations(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const createOrganization = (orgData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: orgData.name,\n      address: orgData.address,\n      suite: orgData.suite,\n      city: orgData.city,\n      state: orgData.state,\n      zip: orgData.zip,\n      phone: orgData.phone,\n      mission: orgData.mission,\n      website: orgData.website,\n      category_id: orgData.categoryId,\n      user_id: orgData.userId\n    };\n    return fetch(\"http://localhost:3001/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addOrganization(resp.data));\n        dispatch(resetOrganizationForm());\n        history.push(`/organizations/${resp.data.id}`); // show it CenterStage\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateOrganization = (OrganizationData, history) => {\n  return dispatch => {\n    const sendableOrgData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId\n    };\n    return fetch(`http://localhost:3001/api/v1/organizations/${orgData.orgId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrgData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addOrganization(resp.data));\n        history.push(`/organizations/${resp.data.id}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const deleteOrganization = (organizationId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/organizations/${organizationId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(deleteOrganizationSuccess(organizationId));\n        history.push(`/organizations`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/centerpoint-frontend/src/actions/myOrganizations.js"],"names":["resetOrganizationForm","setMyOrganizations","organizations","type","clearOrganizations","addOrganization","organization","deleteOrganizationSuccess","organizationId","updateOrganizationSuccess","getMyOrganizations","dispatch","fetch","credentials","method","headers","then","r","json","response","error","alert","data","catch","console","log","createOrganization","orgData","history","sendableOrganizationData","name","address","suite","city","state","zip","phone","mission","website","category_id","categoryId","user_id","userId","body","JSON","stringify","resp","push","id","updateOrganization","OrganizationData","sendableOrgData","organizationData","orgId","deleteOrganization"],"mappings":"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","sourcesContent":["import { resetOrganizationForm } from './organizationForm'\n\nexport const setMyOrganizations = organizations => {\n  return {\n    type: \"SET_MY_ORGANIZATIONS\",\n    organizations\n  }\n}\n\nexport const clearOrganizations = () => {\n  return {\n    type: \"CLEAR_ORGANIZATIONS\"\n  }\n}\n\nexport const addOrganization = organization => {\n  return {\n    type: \"ADD_ORGANIZATION\",\n    organization\n  }\n}\n\nexport const deleteOrganizationSuccess = organizationId => {\n  return {\n    type: \"DELETE_ORGANIZATION\",\n    organizationId\n  }\n}\n\nexport const updateOrganizationSuccess = organization => {\n  return {\n    type: \"UPDATE_ORGANIZATION\",\n    organization\n  }\n}\n\nexport const getMyOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setMyOrganizations(response.data))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const createOrganization = (orgData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: orgData.name,\n      address: orgData.address,\n      suite: orgData.suite,\n      city: orgData.city,\n      state: orgData.state,\n      zip: orgData.zip,\n      phone: orgData.phone,\n      mission: orgData.mission,\n      website: orgData.website,\n      category_id: orgData.categoryId,\n      user_id: orgData.userId\n    }\n    return fetch(\"http://localhost:3001/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(addOrganization(resp.data))\n          dispatch(resetOrganizationForm())\n          history.push(`/organizations/${resp.data.id}`)\n          // show it CenterStage\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const updateOrganization = (OrganizationData, history) => {\n  return dispatch => {\n    const sendableOrgData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId,\n    }\n    return fetch(`http://localhost:3001/api/v1/organizations/${orgData.orgId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrgData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(addOrganization(resp.data))\n          history.push(`/organizations/${resp.data.id}`)\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const deleteOrganization = (organizationId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/organizations/${organizationId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(deleteOrganizationSuccess(organizationId))\n          history.push(`/organizations`)\n        }\n      })\n      .catch(console.log)\n  }\n}"]},"metadata":{},"sourceType":"module"}