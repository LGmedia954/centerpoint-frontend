{"ast":null,"code":"import { resetLoginForm } from \"./loginForm.js\";\nimport { resetSignupForm } from \"./signupForm.js\";\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  };\n};\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  };\n};\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentUser(response.data)); // dispatch(getMyOrganizations())\n\n        dispatch(resetLoginForm());\n        history.push('/');\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser());\n    dispatch(clearOrganizations());\n    return fetch('http://localhost:3001/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentUser(response.data));\n        dispatch(getMyOrganizations());\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/code/centerpoint-frontend/src/actions/currentUser.js"],"names":["resetLoginForm","resetSignupForm","setCurrentUser","user","type","clearCurrentUser","login","credentials","history","dispatch","fetch","method","headers","body","JSON","stringify","then","r","json","response","error","alert","data","push","catch","console","log","logout","event","clearOrganizations","getCurrentUser","getMyOrganizations"],"mappings":"AAAA,SAASA,cAAT,QAA+B,gBAA/B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,KAAK,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAC7C,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,oCAAD,EAAuC;AACjDH,MAAAA,WAAW,EAAE,SADoC;AAEjDI,MAAAA,MAAM,EAAE,MAFyC;AAGjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHwC;AAMjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AAN2C,KAAvC,CAAL,CAQJS,IARI,CAQCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARN,EASJF,IATI,CASCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLX,QAAAA,QAAQ,CAACP,cAAc,CAACiB,QAAQ,CAACG,IAAV,CAAf,CAAR,CADK,CAEL;;AACAb,QAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACAQ,QAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD;AACF,KAlBI,EAmBJC,KAnBI,CAmBEC,OAAO,CAACC,GAnBV,CAAP;AAoBD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAC7B,SAAOnB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACAI,IAAAA,QAAQ,CAACoB,kBAAkB,EAAnB,CAAR;AACA,WAAOnB,KAAK,CAAC,qCAAD,EAAwC;AAClDH,MAAAA,WAAW,EAAE,SADqC;AAElDI,MAAAA,MAAM,EAAE;AAF0C,KAAxC,CAAZ;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMmB,cAAc,GAAG,MAAM;AAClC,SAAOrB,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,+CAAD,EAAkD;AAC5DH,MAAAA,WAAW,EAAE,SAD+C;AAE5DI,MAAAA,MAAM,EAAE,KAFoD;AAG5DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHmD,KAAlD,CAAL,CAOJI,IAPI,CAOCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPN,EAQJF,IARI,CAQCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLX,QAAAA,QAAQ,CAACP,cAAc,CAACiB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAb,QAAAA,QAAQ,CAACsB,kBAAkB,EAAnB,CAAR;AACD;AACF,KAfI,EAgBJP,KAhBI,CAgBEC,OAAO,CAACC,GAhBV,CAAP;AAiBD,GAlBD;AAmBD,CApBM","sourcesContent":["import { resetLoginForm } from \"./loginForm.js\"\nimport { resetSignupForm } from \"./signupForm.js\"\n\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  }\n}\n\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  }\n}\n\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response.data))\n          // dispatch(getMyOrganizations())\n          dispatch(resetLoginForm())\n          history.push('/')\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser())\n    dispatch(clearOrganizations())\n    return fetch('http://localhost:3001/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    })\n  }\n}\n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response.data))\n          dispatch(getMyOrganizations())\n        }\n      })\n      .catch(console.log)\n  }\n}"]},"metadata":{},"sourceType":"module"}