{"ast":null,"code":"import { resetOrganizationForm } from './organizationForm';\nexport const setMyOrganizations = organizations => {\n  return {\n    type: \"SET_MY_ORGANIZATIONS\",\n    organizations\n  };\n};\nexport const clearOrganizations = () => {\n  return {\n    type: \"CLEAR_ORGANIZATIONS\"\n  };\n};\nexport const addOrganization = organization => {\n  return {\n    type: \"ADD_ORGANIZATION\",\n    organization\n  };\n};\nexport const deleteOrganizationSuccess = organizationId => {\n  return {\n    type: \"DELETE_ORGANIZATION\",\n    organizationId\n  };\n};\nexport const updateOrganizationSuccess = organization => {\n  return {\n    type: \"UPDATE_ORGANIZATION\",\n    organization\n  };\n};\nexport const allOrganizations = organizations => {\n  return {\n    type: \"INDEX_ORGANIZATIONS\",\n    organizations\n  };\n};\nexport const fetchOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(allOrganizations(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const getMyOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/mybiz\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setMyOrganizations(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const createOrganization = (organizationData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId,\n      user_id: organizationData.userId\n    };\n    return fetch(\"http://localhost:3000/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addOrganization(resp.data));\n        dispatch(resetOrganizationForm());\n        history.push(`/organizations/${resp.data.id}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateOrganization = (organizationData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId\n    };\n    return fetch(`http://localhost:3000/api/v1/organizations/${organizationData.organizationId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(updateOrganizationSuccess(resp.data));\n        history.push(`/organizations/${resp.data.id}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const deleteOrganization = (organizationId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/organizations/${organizationId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(deleteOrganizationSuccess(organizationId));\n        history.push(`/organizations`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"names":["resetOrganizationForm","setMyOrganizations","organizations","type","clearOrganizations","addOrganization","organization","deleteOrganizationSuccess","organizationId","updateOrganizationSuccess","allOrganizations","fetchOrganizations","dispatch","fetch","credentials","method","headers","then","r","json","response","error","alert","data","catch","console","log","getMyOrganizations","createOrganization","organizationData","history","sendableOrganizationData","name","address","suite","city","state","zip","phone","mission","website","category_id","categoryId","user_id","userId","body","JSON","stringify","resp","push","id","updateOrganization","deleteOrganization"],"sources":["/Users/lesliegonzalez/Development/code/centerpoint-frontend/src/actions/myOrganizations.js"],"sourcesContent":["import { resetOrganizationForm } from './organizationForm'\n\nexport const setMyOrganizations = organizations => {\n  return {\n    type: \"SET_MY_ORGANIZATIONS\",\n    organizations\n  }\n}\n\nexport const clearOrganizations = () => {\n  return {\n    type: \"CLEAR_ORGANIZATIONS\"\n  }\n}\n\nexport const addOrganization = organization => {\n  return {\n    type: \"ADD_ORGANIZATION\",\n    organization\n  }\n}\n\nexport const deleteOrganizationSuccess = organizationId => {\n  return {\n    type: \"DELETE_ORGANIZATION\",\n    organizationId\n  }\n}\n\nexport const updateOrganizationSuccess = organization => {\n  return {\n    type: \"UPDATE_ORGANIZATION\",\n    organization\n  }\n}\n\nexport const allOrganizations = organizations => {\n  return {\n    type: \"INDEX_ORGANIZATIONS\",\n    organizations\n  }\n}\n\nexport const fetchOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(allOrganizations(response.data))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const getMyOrganizations = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/mybiz\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setMyOrganizations(response.data))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const createOrganization = (organizationData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId,\n      user_id: organizationData.userId\n    }\n    return fetch(\"http://localhost:3000/api/v1/organizations\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(addOrganization(resp.data))\n          dispatch(resetOrganizationForm())\n          history.push(`/organizations/${resp.data.id}`)\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const updateOrganization = (organizationData, history) => {\n  return dispatch => {\n    const sendableOrganizationData = {\n      name: organizationData.name,\n      address: organizationData.address,\n      suite: organizationData.suite,\n      city: organizationData.city,\n      state: organizationData.state,\n      zip: organizationData.zip,\n      phone: organizationData.phone,\n      mission: organizationData.mission,\n      website: organizationData.website,\n      category_id: organizationData.categoryId,\n    }\n    return fetch(`http://localhost:3000/api/v1/organizations/${organizationData.organizationId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableOrganizationData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(updateOrganizationSuccess(resp.data))\n          history.push(`/organizations/${resp.data.id}`)\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const deleteOrganization = (organizationId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/organizations/${organizationId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(deleteOrganizationSuccess(organizationId))\n          history.push(`/organizations`)\n        }\n      })\n      .catch(console.log)\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}